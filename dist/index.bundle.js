/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/AudioPlayer.ts":
/*!****************************!*\
  !*** ./src/AudioPlayer.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AudioPlayer\": () => (/* binding */ AudioPlayer)\n/* harmony export */ });\nclass AudioPlayer {\r\n    volume;\r\n    loop;\r\n    src;\r\n    audios;\r\n    constructor(volume) {\r\n        this.volume = volume;\r\n        this.audios = [];\r\n    }\r\n    play(name, loop) {\r\n        let audio = new Audio(`./audio/${name}.mp3`);\r\n        audio.loop = loop;\r\n        audio.volume = this.volume;\r\n        audio.play();\r\n        this.audios.push(audio);\r\n    }\r\n    stop() {\r\n        for (const audio of this.audios)\r\n            audio.pause();\r\n        this.audios = [];\r\n    }\r\n    changeVolume(volume) {\r\n        this.volume = volume;\r\n        for (const audio of this.audios)\r\n            audio.volume = volume;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/AudioPlayer.ts?");

/***/ }),

/***/ "./src/Bullet.ts":
/*!***********************!*\
  !*** ./src/Bullet.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Bullet\": () => (/* binding */ Bullet)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n\r\nclass Bullet {\r\n    position;\r\n    speed = 20;\r\n    speedDelay = 1;\r\n    interval;\r\n    done = false;\r\n    pause = false;\r\n    constructor(position) {\r\n        this.position = position;\r\n        this.nyoom();\r\n    }\r\n    nyoom() {\r\n        this.interval = setInterval(() => {\r\n            if (this.pause)\r\n                return;\r\n            this.position.x += this.speed;\r\n            if (this.position.x > _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.width) {\r\n                this.kill();\r\n            }\r\n        }, this.speedDelay);\r\n    }\r\n    kill() {\r\n        clearInterval(this.interval);\r\n        this.done = true;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/Bullet.ts?");

/***/ }),

/***/ "./src/Enemy.ts":
/*!**********************!*\
  !*** ./src/Enemy.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Enemy\": () => (/* binding */ Enemy)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n/* harmony import */ var _enemyAis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enemyAis */ \"./src/enemyAis.ts\");\n\r\n\r\nclass Enemy {\r\n    position;\r\n    ai;\r\n    done = false;\r\n    interval;\r\n    sprite;\r\n    spriteStage = 0;\r\n    color;\r\n    pause = false;\r\n    constructor(enemySpawn) {\r\n        this.ai = (0,_enemyAis__WEBPACK_IMPORTED_MODULE_1__.getEnemyAi)(enemySpawn.ai);\r\n        this.position = { x: _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.width, y: enemySpawn.startY };\r\n        this.newInterval(0);\r\n        this.sprite = enemySpawn.sprite;\r\n        this.color = enemySpawn.color;\r\n    }\r\n    moveTo(coords) {\r\n        this.position = coords;\r\n    }\r\n    newInterval(stage) {\r\n        clearInterval(this.interval);\r\n        let speed = this.ai[stage].distance / (this.ai[stage].frames * 4);\r\n        this.interval = setInterval(() => {\r\n            if (this.pause)\r\n                return;\r\n            this.spriteStage += 0.05;\r\n            if (this.spriteStage >= 4)\r\n                this.spriteStage = 0;\r\n            this.moveTo({\r\n                x: this.position.x + this.ai[stage].direction.x * speed,\r\n                y: this.position.y + this.ai[stage].direction.y * speed,\r\n            });\r\n            this.ai[stage].distance -= speed;\r\n            if (this.ai[stage].distance <= 0)\r\n                if (++stage >= this.ai.length) {\r\n                    this.kill();\r\n                }\r\n                else {\r\n                    this.newInterval(stage);\r\n                }\r\n        }, 5);\r\n    }\r\n    getSpriteStage() {\r\n        return Math.floor(this.spriteStage);\r\n    }\r\n    kill() {\r\n        this.done = true;\r\n        clearInterval(this.interval);\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/Enemy.ts?");

/***/ }),

/***/ "./src/Explosion.ts":
/*!**************************!*\
  !*** ./src/Explosion.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Explosion\": () => (/* binding */ Explosion)\n/* harmony export */ });\nclass Explosion {\r\n    position;\r\n    color;\r\n    stage = 0;\r\n    done = false;\r\n    constructor(position, color) {\r\n        this.position = position;\r\n        this.color = color;\r\n        this.explode();\r\n    }\r\n    explode() {\r\n        let interval = setInterval(() => {\r\n            this.stage++;\r\n            if (this.stage >= 7) {\r\n                clearInterval(interval);\r\n                this.done = true;\r\n            }\r\n        }, 100);\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/Explosion.ts?");

/***/ }),

/***/ "./src/Game.ts":
/*!*********************!*\
  !*** ./src/Game.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Game\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _Player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Player */ \"./src/Player.ts\");\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n/* harmony import */ var _Enemy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Enemy */ \"./src/Enemy.ts\");\n/* harmony import */ var _levels__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./levels */ \"./src/levels.ts\");\n/* harmony import */ var _Explosion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Explosion */ \"./src/Explosion.ts\");\n\r\n\r\n\r\n\r\n\r\nclass Game {\r\n    player;\r\n    controls;\r\n    bullets = [];\r\n    enemies = [];\r\n    explosions = [];\r\n    levelNumber;\r\n    level;\r\n    timePassed = 0;\r\n    scrollSpeed = .36;\r\n    showHitboxes = false;\r\n    points = 0;\r\n    activeLasers = true;\r\n    laserTimeout;\r\n    expoStage = -1;\r\n    constructor(controls, levelNumber) {\r\n        this.textScreen(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.prepare);\r\n        setTimeout(() => {\r\n            this.player = new _Player__WEBPACK_IMPORTED_MODULE_0__.Player();\r\n            this.controls = controls;\r\n            this.levelNumber = levelNumber;\r\n            this.level = (0,_levels__WEBPACK_IMPORTED_MODULE_3__.getLevel)(levelNumber);\r\n            this.movement();\r\n            this.live();\r\n        }, 120 * 20);\r\n    }\r\n    movement() {\r\n        document.body.addEventListener(\"keydown\", (e) => {\r\n            for (const [action, key] of Object.entries(this.controls)) {\r\n                if (e.key === key && action !== \"shoot\" && action !== \"hitboxes\") {\r\n                    this.player.move(action, key);\r\n                }\r\n            }\r\n        });\r\n        document.body.addEventListener(\"keyup\", (e) => {\r\n            if (this.controls.shoot === e.key)\r\n                this.bullets.push(...this.player.shoot());\r\n            else if (this.controls.hitboxes === e.key)\r\n                this.showHitboxes = !this.showHitboxes;\r\n        });\r\n    }\r\n    live() {\r\n        let live = setInterval(() => {\r\n            if (!this.player.justDied) {\r\n                this.timePassed += 10;\r\n                this.entityRemover();\r\n                this.bulletCollisionChecker();\r\n                this.playerCollisionChecker();\r\n                this.enemySpawner();\r\n            }\r\n            this.draw();\r\n            if (this.player.justDied)\r\n                return;\r\n            if (_consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width + this.timePassed * this.scrollSpeed >= 21000) {\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.stop();\r\n                clearInterval(live);\r\n                this.textScreen(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.completed);\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"complete\", false);\r\n                setTimeout(() => {\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.main, 0, 0);\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"main\", true);\r\n                }, 120 * 20);\r\n            }\r\n            else if (this.player.hp === -1) {\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.stop();\r\n                clearInterval(live);\r\n                this.textScreen(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.gameOver);\r\n                setTimeout(() => {\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.main, 0, 0);\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"main\", true);\r\n                }, 120 * 20);\r\n            }\r\n            else if (this.player.hp === -2) {\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.stop();\r\n                clearInterval(live);\r\n            }\r\n        }, 1000 / 100);\r\n    }\r\n    draw() {\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.fillStyle = \"#000\";\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.fillRect(0, 0, 2188, 1440);\r\n        //background\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.background, -this.timePassed * this.scrollSpeed + this.level.blackScreenLength, 0);\r\n        //blocks\r\n        for (const block of this.getCurrentBlocks())\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, 0, 0, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height, block.position.x - this.timePassed * this.scrollSpeed, block.position.y, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height);\r\n        //lasers\r\n        if (this.activeLasers)\r\n            for (const laser of this.getCurrentLasers()) {\r\n                let stage = (this.timePassed / 10) % 57;\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, 0, 57 + stage, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height - stage, laser.position.x - this.timePassed * this.scrollSpeed, laser.position.y, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height - stage);\r\n                for (let no = 1; no < laser.height; no++)\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, 0, 57, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height, laser.position.x - this.timePassed * this.scrollSpeed, laser.position.y + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height * no - stage, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height);\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, 0, 57, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, stage, laser.position.x - this.timePassed * this.scrollSpeed, laser.position.y + laser.height * _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height - stage, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, stage);\r\n            }\r\n        //switches\r\n        for (const sw of this.getCurrentSwitches())\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, 57, 57, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height, sw.x - this.timePassed * this.scrollSpeed, sw.y, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height);\r\n        //bullets\r\n        for (const bullet of this.bullets)\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.bullet, bullet.position.x, bullet.position.y);\r\n        //enemies\r\n        for (const enemy of this.enemies) {\r\n            let disGfx = _consts__WEBPACK_IMPORTED_MODULE_1__.gfx.enemies[enemy.sprite];\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(disGfx, enemy.getSpriteStage() * _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, enemy.color * _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height, enemy.position.x, enemy.position.y, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height);\r\n        }\r\n        //explosions\r\n        for (const explosion of this.explosions) {\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.explosions, explosion.stage * _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, explosion.color * _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height, explosion.position.x, explosion.position.y, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize.height);\r\n        }\r\n        //player\r\n        if (this.expoStage === -1) {\r\n            if (!this.player.isVertical())\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.player, this.player.justShot * _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, this.player.spriteStage * _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.height, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.height, this.player.position.x, this.player.position.y, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.height);\r\n            else {\r\n                let playerHeight = _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.height + 15;\r\n                _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.playerVert, this.player.justShot * _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, this.player.spriteStage * playerHeight, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, playerHeight, this.player.position.x, this.player.position.y - 8, _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize.width, playerHeight);\r\n            }\r\n        }\r\n        else\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.expo, this.expoStage * 200, 0, 200, 161, this.player.position.x - 14, this.player.position.y - 45, 200, 161);\r\n        //shield\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.shield, 158 * Math.floor(this.player.shieldSpriteStage), 0, 158, 288, this.player.position.x + 57, this.player.position.y - 94, 158, 288);\r\n        //ui bar\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.uiBar, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width - 1498, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.height + 7);\r\n        //shield ui\r\n        let shield = this.player.shield;\r\n        for (let i = 0; i < shield; i += 0.25) {\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.other, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width * (1 + i % 1), 0, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width / 4, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width - 806 + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width * i, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.height + 61, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width / 4, _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height);\r\n        }\r\n        //digits points\r\n        let pStr = this.points.toString().padEnd(2, \"0\");\r\n        for (let i = pStr.length - 1; i >= 0; i--)\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.digPoints, parseInt(pStr[i]) * 111, 0, 111, 166, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width - (1498 + (pStr.length - i) * 111), _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.height + 7, 111, 166);\r\n        //level number\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.digUi, (this.levelNumber + 1) * 68, 0, 68, 51, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width - 1381, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.height + 61, 68, 51);\r\n        //shield count\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_1__.gfx.digUi, this.player.hp * 68, 0, 68, 51, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width - 178, _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.height + 61, 68, 51);\r\n        //hitboxes\r\n        if (this.showHitboxes) {\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.strokeStyle = \"red\";\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.lineWidth = 5;\r\n            for (const line of this.getCurrentLines()) {\r\n                this.drawLine(line.start.x - this.timePassed * this.scrollSpeed, line.start.y, line.end.x - this.timePassed * this.scrollSpeed, line.end.y);\r\n            }\r\n            let sides = [];\r\n            for (const block of this.getCurrentBlocks())\r\n                sides.push(...this.getRectSides({ topLeft: this.getCurrentBackObjPosition(block.position), size: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize }));\r\n            if (this.activeLasers)\r\n                for (const laser of this.getCurrentLasers())\r\n                    sides.push(...this.getRectSides({ topLeft: this.getCurrentBackObjPosition(laser.position), size: this.getLaserSize(laser) }));\r\n            for (const sw of this.getCurrentSwitches())\r\n                sides.push(...this.getRectSides({ topLeft: this.getCurrentBackObjPosition(sw), size: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize }));\r\n            for (const bullet of this.bullets)\r\n                sides.push(...this.getRectSides({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }));\r\n            for (const enemy of this.enemies)\r\n                sides.push(...this.getRectSides({ topLeft: enemy.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize }));\r\n            sides.push(...this.getRectSides({ topLeft: this.player.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize }));\r\n            for (const side of sides)\r\n                this.drawLine(side.start.x, side.start.y, side.end.x, side.end.y);\r\n        }\r\n        ;\r\n    }\r\n    drawLine(x1, y1, x2, y2) {\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.beginPath();\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.moveTo(x1, y1);\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.lineTo(x2, y2);\r\n        _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.stroke();\r\n    }\r\n    entityRemover() {\r\n        this.bullets = this.bullets.filter(bullet => bullet.done === false);\r\n        this.enemies = this.enemies.filter(enemy => enemy.done === false);\r\n        this.explosions = this.explosions.filter(explosion => explosion.done === false);\r\n    }\r\n    playerCollisionChecker() {\r\n        //enemies\r\n        for (const enemy of this.enemies) {\r\n            if (this.rectanglesCollision({ topLeft: this.player.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize }, { topLeft: enemy.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize })) {\r\n                enemy.kill();\r\n                if (this.player.kill())\r\n                    this.playerDied();\r\n                this.explosions.push(new _Explosion__WEBPACK_IMPORTED_MODULE_4__.Explosion(enemy.position, enemy.color));\r\n                this.points += 20;\r\n            }\r\n        }\r\n        //lines\r\n        for (const line of this.getCurrentLines()) {\r\n            if (this.rectangleLineCollision({ topLeft: this.player.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize }, this.getCurrentLinePosition(line))) {\r\n                if (this.player.kill())\r\n                    this.playerDied();\r\n            }\r\n        }\r\n        //blocks\r\n        for (const block of this.getCurrentBlocks()) {\r\n            if (this.rectanglesCollision({ topLeft: this.player.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize }, { topLeft: this.getCurrentBackObjPosition(block.position), size: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize })) {\r\n                block.ded = true;\r\n                if (this.player.kill())\r\n                    this.playerDied();\r\n                this.points += 10;\r\n            }\r\n        }\r\n        //lasers\r\n        if (this.activeLasers)\r\n            for (const laser of this.getCurrentLasers()) {\r\n                if (this.rectanglesCollision({ topLeft: this.player.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.playerSize }, { topLeft: this.getCurrentBackObjPosition(laser.position), size: this.getLaserSize(laser) })) {\r\n                    if (this.player.kill())\r\n                        this.playerDied();\r\n                }\r\n            }\r\n    }\r\n    bulletCollisionChecker() {\r\n        for (const bullet of this.bullets) {\r\n            //enemies\r\n            for (const enemy of this.enemies) {\r\n                if (this.rectanglesCollision({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }, { topLeft: enemy.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.enemySize })) {\r\n                    if (enemy.done)\r\n                        return;\r\n                    bullet.kill();\r\n                    enemy.kill();\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"enemy\", false);\r\n                    this.explosions.push(new _Explosion__WEBPACK_IMPORTED_MODULE_4__.Explosion(enemy.position, enemy.color));\r\n                    this.points += 20;\r\n                }\r\n            }\r\n            //lines\r\n            for (const line of this.getCurrentLines()) {\r\n                if (this.rectangleLineCollision({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }, this.getCurrentLinePosition(line))) {\r\n                    bullet.kill();\r\n                }\r\n            }\r\n            //blocks\r\n            for (const block of this.getCurrentBlocks()) {\r\n                if (this.rectanglesCollision({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }, { topLeft: this.getCurrentBackObjPosition(block.position), size: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize })) {\r\n                    if (block.ded)\r\n                        return;\r\n                    block.ded = true;\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"block\", false);\r\n                    this.points += 10;\r\n                }\r\n            }\r\n            //lasers\r\n            if (this.activeLasers)\r\n                for (const laser of this.getCurrentLasers()) {\r\n                    if (this.rectanglesCollision({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }, { topLeft: this.getCurrentBackObjPosition(laser.position), size: this.getLaserSize(laser) })) {\r\n                        bullet.kill();\r\n                    }\r\n                }\r\n            //switches\r\n            for (const sw of this.getCurrentSwitches()) {\r\n                if (this.rectanglesCollision({ topLeft: bullet.position, size: _consts__WEBPACK_IMPORTED_MODULE_1__.bulletSize }, { topLeft: this.getCurrentBackObjPosition(sw), size: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize })) {\r\n                    bullet.kill();\r\n                    this.activeLasers = false;\r\n                    _consts__WEBPACK_IMPORTED_MODULE_1__.audioPlayer.play(\"laser\", false);\r\n                    clearTimeout(this.laserTimeout);\r\n                    this.laserTimeout = setTimeout(() => { this.activeLasers = true; }, 2000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    rectanglesCollision(rect1, rect2) {\r\n        if (rect1.topLeft.x + rect1.size.width > rect2.topLeft.x &&\r\n            rect1.topLeft.x < rect2.topLeft.x + rect2.size.width &&\r\n            rect1.topLeft.y + rect1.size.height > rect2.topLeft.y &&\r\n            rect1.topLeft.y < rect2.topLeft.y + rect2.size.height) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    rectangleLineCollision(rect, line) {\r\n        let rectSides = this.getRectSides(rect);\r\n        for (const side of rectSides) {\r\n            if (this.linesCollision(line, side))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    linesCollision(line1, line2) {\r\n        let x1 = line1.start.x;\r\n        let y1 = line1.start.y;\r\n        let x2 = line1.end.x;\r\n        let y2 = line1.end.y;\r\n        let x3 = line2.start.x;\r\n        let y3 = line2.start.y;\r\n        let x4 = line2.end.x;\r\n        let y4 = line2.end.y;\r\n        let uA = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n        let uB = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));\r\n        if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1)\r\n            return true;\r\n        return false;\r\n    }\r\n    spawnEnemy(enemySpawn) {\r\n        let newEnemy = new _Enemy__WEBPACK_IMPORTED_MODULE_2__.Enemy(enemySpawn);\r\n        this.enemies.push(newEnemy);\r\n    }\r\n    enemySpawner() {\r\n        for (const enemySpawn of this.level.enemySpawns) {\r\n            if (this.timePassed >= enemySpawn.spawnTime)\r\n                this.spawnEnemy(enemySpawn);\r\n        }\r\n        this.level.enemySpawns = this.level.enemySpawns.filter(spawn => this.timePassed < spawn.spawnTime);\r\n    }\r\n    getCurrentBlocks() {\r\n        return this.level.blocks.filter(item => ((item.position.x > this.timePassed * this.scrollSpeed &&\r\n            item.position.x < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width) ||\r\n            (item.position.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width > this.timePassed * this.scrollSpeed &&\r\n                item.position.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width))\r\n            && !item.ded);\r\n    }\r\n    getCurrentLasers() {\r\n        return this.level.lasers.filter(item => (item.position.x > this.timePassed * this.scrollSpeed &&\r\n            item.position.x < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width) ||\r\n            (item.position.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width > this.timePassed * this.scrollSpeed &&\r\n                item.position.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width));\r\n    }\r\n    getCurrentSwitches() {\r\n        return this.level.switches.filter(item => (item.x > this.timePassed * this.scrollSpeed &&\r\n            item.x < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width) ||\r\n            (item.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width > this.timePassed * this.scrollSpeed &&\r\n                item.x + _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width));\r\n    }\r\n    getCurrentBackObjPosition(coords) {\r\n        return { x: coords.x - this.timePassed * this.scrollSpeed, y: coords.y };\r\n    }\r\n    getLaserSize(laser) {\r\n        return { width: _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.width, height: laser.height * _consts__WEBPACK_IMPORTED_MODULE_1__.backObjSize.height };\r\n    }\r\n    getCurrentLines() {\r\n        return this.level.lines.filter(item => (item.start.x > this.timePassed * this.scrollSpeed &&\r\n            item.start.x < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width) ||\r\n            (item.end.x > this.timePassed * this.scrollSpeed &&\r\n                item.end.x < this.timePassed * this.scrollSpeed + _consts__WEBPACK_IMPORTED_MODULE_1__.boardSize.width));\r\n    }\r\n    getCurrentLinePosition(line) {\r\n        return {\r\n            start: { x: line.start.x - this.timePassed * this.scrollSpeed, y: line.start.y },\r\n            end: { x: line.end.x - this.timePassed * this.scrollSpeed, y: line.end.y }\r\n        };\r\n    }\r\n    getRectSides(rect) {\r\n        return [\r\n            //top\r\n            {\r\n                start: { x: rect.topLeft.x, y: rect.topLeft.y },\r\n                end: { x: rect.topLeft.x + rect.size.width, y: rect.topLeft.y }\r\n            },\r\n            //right\r\n            {\r\n                start: { x: rect.topLeft.x + rect.size.width, y: rect.topLeft.y },\r\n                end: { x: rect.topLeft.x + rect.size.width, y: rect.topLeft.y + rect.size.height }\r\n            },\r\n            //bottom\r\n            {\r\n                start: { x: rect.topLeft.x, y: rect.topLeft.y + rect.size.height },\r\n                end: { x: rect.topLeft.x + rect.size.width, y: rect.topLeft.y + rect.size.height }\r\n            },\r\n            //left\r\n            {\r\n                start: { x: rect.topLeft.x, y: rect.topLeft.y },\r\n                end: { x: rect.topLeft.x, y: rect.topLeft.y + rect.size.height }\r\n            }\r\n        ];\r\n    }\r\n    textScreen(graphic) {\r\n        let time = 0;\r\n        let interval = setInterval(() => {\r\n            let op = (time < 32 ? Math.floor(time / 8) : (time > 82 ? Math.floor((114 - time) / 8) : 4)) * 0.25;\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.fillStyle = \"#000\";\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.fillRect(0, 0, 2188, 1440);\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.globalAlpha = op;\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.drawImage(graphic, (2188 - graphic.width) / 2, (1440 - graphic.height) / 2);\r\n            _consts__WEBPACK_IMPORTED_MODULE_1__.ctx.globalAlpha = 1;\r\n            time++;\r\n            if (time >= 114)\r\n                clearInterval(interval);\r\n        }, 20);\r\n    }\r\n    playerDied() {\r\n        if (this.player.justDied)\r\n            return;\r\n        this.player.justDied = true;\r\n        for (const bullet of this.bullets)\r\n            bullet.pause = true;\r\n        for (const enemy of this.enemies)\r\n            enemy.pause = true;\r\n        this.expoStage = 0;\r\n        let expoInterval = setInterval(() => {\r\n            this.expoStage++;\r\n            if (this.expoStage == 4)\r\n                clearInterval(expoInterval);\r\n        }, 110);\r\n        setTimeout(() => {\r\n            this.expoStage = -1;\r\n            this.player.activateShield();\r\n            this.player.hp--;\r\n        }, 550);\r\n        setTimeout(() => {\r\n            this.player.justDied = false;\r\n            for (const bullet of this.bullets)\r\n                bullet.pause = false;\r\n            for (const enemy of this.enemies)\r\n                enemy.pause = false;\r\n        }, 600);\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/Game.ts?");

/***/ }),

/***/ "./src/Player.ts":
/*!***********************!*\
  !*** ./src/Player.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Player\": () => (/* binding */ Player)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ \"./src/Bullet.ts\");\n\r\n\r\nclass Player {\r\n    position;\r\n    shield = 0;\r\n    speed = 3.5;\r\n    speedDelay = 3;\r\n    blockedMovement = [];\r\n    spriteStage = 0;\r\n    shieldSpriteStage = -1;\r\n    justShot = 0;\r\n    hp = 5;\r\n    movement = { x: 0, y: 0 };\r\n    justDied = false;\r\n    constructor() {\r\n        this.moveTo({ x: 10, y: (_consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.height - _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.height) / 2 });\r\n        this.activateShield();\r\n        this.moving();\r\n    }\r\n    moveTo(coords) {\r\n        if (!this.justDied)\r\n            this.position = this.stayInBox(coords);\r\n    }\r\n    moving() {\r\n        setInterval(() => {\r\n            this.moveTo({\r\n                x: this.position.x + this.movement.x * this.speed,\r\n                y: this.position.y + this.movement.y * this.speed\r\n            });\r\n        }, this.speedDelay);\r\n    }\r\n    move(dir, key) {\r\n        if (this.blockedMovement.includes(key))\r\n            return;\r\n        this.blockedMovement.push(key);\r\n        let direction = this.getDirection(dir);\r\n        this.movement = {\r\n            x: this.movement.x + direction.x,\r\n            y: this.movement.y + direction.y\r\n        };\r\n        let cancelled = false;\r\n        document.body.addEventListener(\"keyup\", (e) => {\r\n            if (e.key === key && !cancelled) {\r\n                cancelled = true;\r\n                this.blockedMovement = this.blockedMovement.filter(val => val !== key);\r\n                this.movement = {\r\n                    x: this.movement.x - direction.x,\r\n                    y: this.movement.y - direction.y\r\n                };\r\n            }\r\n        });\r\n    }\r\n    getDirection(direction) {\r\n        if (direction == \"up\")\r\n            return { x: 0, y: -1 };\r\n        else if (direction == \"right\")\r\n            return { x: 1, y: 0 };\r\n        else if (direction == \"down\")\r\n            return { x: 0, y: 1 };\r\n        else if (direction == \"left\")\r\n            return { x: -1, y: 0 };\r\n    }\r\n    stayInBox(coords) {\r\n        const bounds = {\r\n            x: _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.width - _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.width,\r\n            y: _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.height - _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.height\r\n        };\r\n        coords.x = coords.x < 0 ? 0 : (coords.x > bounds.x * 0.7 ? bounds.x * 0.7 : coords.x);\r\n        coords.y = coords.y < 30 ? 30 : (coords.y > bounds.y - 65 ? bounds.y - 65 : coords.y);\r\n        return coords;\r\n    }\r\n    shoot() {\r\n        if (this.justShot || this.justDied)\r\n            return [new _Bullet__WEBPACK_IMPORTED_MODULE_1__.Bullet({ x: 69420, y: 2137 })];\r\n        _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.play(\"shot\", false);\r\n        this.justShot = 1;\r\n        setTimeout(() => {\r\n            this.justShot = 0;\r\n        }, 120);\r\n        if (!this.isVertical())\r\n            return [new _Bullet__WEBPACK_IMPORTED_MODULE_1__.Bullet({ x: this.position.x + _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.width, y: this.position.y + _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.height - _consts__WEBPACK_IMPORTED_MODULE_0__.bulletSize.height })];\r\n        else\r\n            return [\r\n                new _Bullet__WEBPACK_IMPORTED_MODULE_1__.Bullet({ x: this.position.x + _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.width, y: this.position.y + _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.height - _consts__WEBPACK_IMPORTED_MODULE_0__.bulletSize.height * 2 / 3 }),\r\n                new _Bullet__WEBPACK_IMPORTED_MODULE_1__.Bullet({ x: this.position.x + _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.width, y: this.position.y - 1 })\r\n            ];\r\n    }\r\n    activateShield() {\r\n        _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.play(\"shield\", false);\r\n        this.shield = 0.25;\r\n        let shieldInterval = setInterval(() => {\r\n            this.shield += 0.25;\r\n            if (this.shield >= 5) {\r\n                clearInterval(shieldInterval);\r\n                shieldInterval = setInterval(() => {\r\n                    this.shield -= 0.25;\r\n                    if (this.shield <= 0) {\r\n                        clearInterval(shieldInterval);\r\n                    }\r\n                }, 220);\r\n            }\r\n        }, 20);\r\n        this.spriteStage = 1;\r\n        let spriteDiff = -1;\r\n        this.shieldSpriteStage = 0;\r\n        let spriteInterval = setInterval(() => {\r\n            if (this.spriteStage == 1 || this.spriteStage == 5)\r\n                spriteDiff *= -1;\r\n            this.spriteStage += spriteDiff;\r\n            this.shieldSpriteStage += 0.5;\r\n            if (this.shieldSpriteStage >= 4)\r\n                this.shieldSpriteStage = 0;\r\n            if (this.shield <= 0.25) {\r\n                clearInterval(spriteInterval);\r\n                this.spriteStage = 0;\r\n                this.shieldSpriteStage = -1;\r\n            }\r\n        }, 60);\r\n    }\r\n    isVertical() {\r\n        if (!this.movement.y || this.position.y == 30 || this.position.y == _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.height - _consts__WEBPACK_IMPORTED_MODULE_0__.playerSize.height - 65)\r\n            return false;\r\n        return true;\r\n    }\r\n    kill() {\r\n        if (this.shield > 0)\r\n            return false;\r\n        _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.play(\"player\", false);\r\n        return true;\r\n    }\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/Player.ts?");

/***/ }),

/***/ "./src/consts.ts":
/*!***********************!*\
  !*** ./src/consts.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"audioPlayer\": () => (/* binding */ audioPlayer),\n/* harmony export */   \"backObjSize\": () => (/* binding */ backObjSize),\n/* harmony export */   \"boardSize\": () => (/* binding */ boardSize),\n/* harmony export */   \"bulletSize\": () => (/* binding */ bulletSize),\n/* harmony export */   \"canvas\": () => (/* binding */ canvas),\n/* harmony export */   \"ctx\": () => (/* binding */ ctx),\n/* harmony export */   \"enemySize\": () => (/* binding */ enemySize),\n/* harmony export */   \"gfx\": () => (/* binding */ gfx),\n/* harmony export */   \"playerSize\": () => (/* binding */ playerSize)\n/* harmony export */ });\n/* harmony import */ var _AudioPlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AudioPlayer */ \"./src/AudioPlayer.ts\");\n\r\nconst canvas = document.getElementById(\"game\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nconst boardSize = { width: 2188, height: 1267 };\r\nconst playerSize = { width: 172, height: 71 };\r\nconst bulletSize = { width: 344, height: 21 };\r\nconst enemySize = { width: 172, height: 150 };\r\nconst backObjSize = { width: 57, height: 57 };\r\nconst audioPlayer = new _AudioPlayer__WEBPACK_IMPORTED_MODULE_0__.AudioPlayer(1);\r\nconst gfx = {\r\n    \"background\": getImage(\"background\"),\r\n    \"bullet\": getImage(\"bullet\"),\r\n    \"enemies\": new Array(),\r\n    \"explosions\": getImage(\"explosions\"),\r\n    \"player\": getImage(\"player\"),\r\n    \"playerVert\": getImage(\"playerVert\"),\r\n    \"expo\": getImage(\"expo\"),\r\n    \"shield\": getImage(\"shield\"),\r\n    \"uiBar\": getImage(\"uiBar\"),\r\n    \"digPoints\": getImage(\"digitsPoints\"),\r\n    \"digUi\": getImage(\"digitsUi\"),\r\n    \"other\": getImage(\"other\"),\r\n    \"main\": getImage(\"main\"),\r\n    \"prepare\": getImage(\"prepare\"),\r\n    \"gameOver\": getImage(\"gameOver\"),\r\n    \"completed\": getImage(\"completed\")\r\n};\r\nfor (let i = 0; i < 5; i++)\r\n    gfx.enemies.push(getImage(`enemy${i}`));\r\nfunction getImage(name) {\r\n    let img = new Image();\r\n    img.src = `./gfx/${name}.png`;\r\n    return img;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/consts.ts?");

/***/ }),

/***/ "./src/enemyAis.ts":
/*!*************************!*\
  !*** ./src/enemyAis.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getEnemyAi\": () => (/* binding */ getEnemyAi)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n\r\nfunction getEnemyAi(ai) {\r\n    let enemyAi;\r\n    if (ai === 0) {\r\n        enemyAi = [\r\n            { direction: { x: -1, y: 0 }, distance: 1730, frames: 50 },\r\n            { direction: { x: 0, y: 1 }, distance: 430, frames: 20 },\r\n            { direction: { x: 1, y: 0 }, distance: 1440, frames: 40 },\r\n            { direction: { x: 0, y: 1 }, distance: 325, frames: 15 },\r\n            { direction: { x: -1, y: 0 }, distance: 1080, frames: 50 },\r\n            { direction: { x: 0, y: -1 }, distance: 325, frames: 15 },\r\n            { direction: { x: 1, y: 0 }, distance: 1370, frames: 65 }\r\n        ];\r\n    }\r\n    else if (ai === 1) {\r\n        enemyAi = [\r\n            { direction: { x: -1, y: 0 }, distance: 1655, frames: 80 },\r\n            { direction: { x: 0, y: 1 }, distance: 540, frames: 25 },\r\n            { direction: { x: 1, y: 0 }, distance: 1655, frames: 230 }\r\n        ];\r\n    }\r\n    else if (ai === 2) {\r\n        enemyAi = [\r\n            { direction: { x: -1, y: 0 }, distance: 1655, frames: 115 },\r\n            { direction: { x: 0, y: -1 }, distance: 505, frames: 35 },\r\n            { direction: { x: 1, y: 0 }, distance: 1655, frames: 115 }\r\n        ];\r\n    }\r\n    else if (ai === 3) {\r\n        enemyAi = [\r\n            { direction: { x: -1, y: 0 }, distance: 150, frames: 10 },\r\n            { direction: { x: -1, y: -0.5 }, distance: 135, frames: 10 },\r\n            { direction: { x: -0.5, y: -1 }, distance: 75, frames: 5 },\r\n            { direction: { x: 0, y: -1 }, distance: 70, frames: 5 },\r\n            { direction: { x: -0.5, y: -1 }, distance: 75, frames: 5 },\r\n            { direction: { x: -1, y: -0.5 }, distance: 135, frames: 10 }\r\n        ];\r\n        let groundCovered = 495;\r\n        let yWay = -1;\r\n        while (true) {\r\n            for (let i = 0; i < 6; i++) {\r\n                let e = enemyAi[i];\r\n                enemyAi.push({\r\n                    direction: {\r\n                        x: e.direction.x,\r\n                        y: e.direction.y * yWay\r\n                    },\r\n                    distance: e.distance,\r\n                    frames: e.frames\r\n                });\r\n            }\r\n            groundCovered += 495;\r\n            if (groundCovered > _consts__WEBPACK_IMPORTED_MODULE_0__.boardSize.width + _consts__WEBPACK_IMPORTED_MODULE_0__.enemySize.width)\r\n                break;\r\n            yWay *= -1;\r\n        }\r\n    }\r\n    else if (ai === 4) {\r\n        enemyAi = [\r\n            { direction: { x: -1, y: 0 }, distance: 150, frames: 20 },\r\n            { direction: { x: 0, y: -1 }, distance: 1080, frames: 75 },\r\n            { direction: { x: -1, y: 0 }, distance: 1010, frames: 35 },\r\n            { direction: { x: 0, y: 1 }, distance: 1267, frames: 100 }\r\n        ];\r\n    }\r\n    return enemyAi;\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/enemyAis.ts?");

/***/ }),

/***/ "./src/levels.ts":
/*!***********************!*\
  !*** ./src/levels.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getLevel\": () => (/* binding */ getLevel)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n\r\nlet levels = [\r\n    {\r\n        blackScreenLength: 2506,\r\n        ceilPoints: [\r\n            [100, 0],\r\n            [175, 190],\r\n            [320, 190],\r\n            [360, 260],\r\n            [470, 70],\r\n            [600, 220],\r\n            [800, 110],\r\n            [880, 450],\r\n            [1032, 79],\r\n            [1120, 210],\r\n            [1287, 96],\r\n            [1333, 174],\r\n            [1480, 182],\r\n            [1508, 250],\r\n            [1665, 11],\r\n            [1850, 11],\r\n            [1906, 167],\r\n            [2048, 190],\r\n            [2085, 259],\r\n            [2179, 72],\r\n            [2326, 234],\r\n            [2483, 104],\r\n            [2605, 576],\r\n            [2704, 557],\r\n            [2744, 245],\r\n            [2907, 245],\r\n            [2959, 125],\r\n            [3114, 123],\r\n            [3176, 433],\r\n            [3289, 213],\r\n            [3423, 247],\r\n            [3461, 178],\r\n            [3770, 156],\r\n            [3814, 243],\r\n            [3919, 71],\r\n            [4041, 248],\r\n            [4190, 6],\r\n            [4333, 413],\r\n            [4539, 19],\r\n            [4767, 79],\r\n            [4806, 175],\r\n            [4944, 60],\r\n            [5020, 136],\r\n            [5107, 19],\r\n            [5188, 9],\r\n            [5207, 240],\r\n            [5382, 36],\r\n            [5482, 435],\r\n            [5604, 186],\r\n            [5755, 220],\r\n            [5784, 7],\r\n            [5884, 9],\r\n            [6036, 247],\r\n            [5939, 457],\r\n            [5960, 500],\r\n            [6094, 506],\r\n            [6224, 247],\r\n            [6480, 98],\r\n            [6517, 177],\r\n            [6634, 139],\r\n            [6693, 250],\r\n            [6843, 14],\r\n            [6968, 15],\r\n            [7038, 338],\r\n            [7231, 79],\r\n            [7291, 194],\r\n            [7465, 7],\r\n            [7620, 11],\r\n            [7724, 178],\r\n            [7871, 9],\r\n            [7957, 161],\r\n            [8011, 61],\r\n            [8137, 251],\r\n            [8297, 3],\r\n            [8410, 167],\r\n            [8481, 473],\r\n            [8595, 281],\r\n            [8676, 247],\r\n            [8821, 85],\r\n            [8870, 166],\r\n            [8937, 611],\r\n            [9056, 473],\r\n            [9084, 28],\r\n            [9348, 50],\r\n            [9417, 166],\r\n            [9523, 60],\r\n            [9631, 123],\r\n            [9712, 11],\r\n            [9799, 4],\r\n            [9813, 240],\r\n            [9899, 125],\r\n            [10046, 120],\r\n            [10090, 443],\r\n            [10253, 101],\r\n            [10337, 242],\r\n            [10370, 190],\r\n            [10369, 1],\r\n            [10505, 22],\r\n            [10608, 191],\r\n            [10559, 480],\r\n            [10698, 502],\r\n            [10828, 256],\r\n            [10852, 36],\r\n            [10989, 4],\r\n            [11067, 337],\r\n            [11263, 71],\r\n            [11319, 199],\r\n            [11484, 1],\r\n            [11643, 23],\r\n            [11701, 182],\r\n            [11738, 91],\r\n            [11826, 91],\r\n            [11864, 0],\r\n            [11942, 0],\r\n            [11988, 52],\r\n            [12049, 53],\r\n            [12168, -10],\r\n            [12771, -10],\r\n            [12912, 207],\r\n            [13029, 4],\r\n            [13142, 180],\r\n            [13172, 58],\r\n            [13326, 248],\r\n            [13466, 3],\r\n            [13610, 178],\r\n            [13659, 494],\r\n            [13823, 204],\r\n            [13823, 4],\r\n            [13952, 12],\r\n            [14004, 177],\r\n            [14036, 57],\r\n            [14172, 224],\r\n            [14180, 266],\r\n            [14352, 14],\r\n            [14409, 121],\r\n            [14422, 250],\r\n            [14528, 117],\r\n            [14655, 126],\r\n            [14697, 443],\r\n            [14894, 96],\r\n            [14944, 253],\r\n            [14977, 194],\r\n            [14978, 1],\r\n            [15126, 55],\r\n            [15219, 167],\r\n            [15276, 638],\r\n            [15385, 557],\r\n            [15434, 22],\r\n            [15702, 63],\r\n            [15757, 161],\r\n            [15835, 61],\r\n            [15938, 60],\r\n            [15969, 220],\r\n            [16023, 55],\r\n            [16166, 213],\r\n            [16191, 277],\r\n            [16245, 280],\r\n            [16243, 101],\r\n            [16368, 47],\r\n            [16498, 194],\r\n            [16541, 554],\r\n            [16642, 443],\r\n            [16709, 3],\r\n            [16834, 38],\r\n            [16889, 172],\r\n            [16915, 57],\r\n            [17067, 245],\r\n            [17185, 57],\r\n            [17295, 251],\r\n            [17441, 9],\r\n            [17533, 145],\r\n            [17579, 440],\r\n            [17696, 223],\r\n            [17810, 0],\r\n            [17989, 115],\r\n            [18000, 634],\r\n        ],\r\n        floorPoints: [\r\n            [71, 1267],\r\n            [131, 1084],\r\n            [243, 999],\r\n            [294, 1004],\r\n            [408, 1162],\r\n            [683, 1170],\r\n            [769, 1048],\r\n            [913, 1171],\r\n            [968, 1078],\r\n            [1006, 1075],\r\n            [1051, 993],\r\n            [1105, 1135],\r\n            [1176, 1143],\r\n            [1226, 1054],\r\n            [1344, 1053],\r\n            [1374, 844],\r\n            [1445, 837],\r\n            [1521, 1124],\r\n            [1595, 1127],\r\n            [1711, 1249],\r\n            [1814, 1244],\r\n            [1853, 1092],\r\n            [1933, 1056],\r\n            [1947, 999],\r\n            [2020, 997],\r\n            [2134, 1159],\r\n            [2412, 1173],\r\n            [2464, 1018],\r\n            [2508, 1015],\r\n            [2551, 939],\r\n            [2621, 1126],\r\n            [2888, 1187],\r\n            [3010, 1146],\r\n            [3072, 1042],\r\n            [3221, 1181],\r\n            [3273, 1078],\r\n            [3316, 1069],\r\n            [3357, 994],\r\n            [3407, 1102],\r\n            [3539, 1097],\r\n            [3639, 1000],\r\n            [3772, 997],\r\n            [3779, 760],\r\n            [3836, 704],\r\n            [3973, 701],\r\n            [4049, 589],\r\n            [4098, 695],\r\n            [4097, 980],\r\n            [4173, 1015],\r\n            [4255, 1148],\r\n            [4380, 1198],\r\n            [4458, 1197],\r\n            [4509, 1108],\r\n            [4547, 1110],\r\n            [4589, 1190],\r\n            [4713, 1184],\r\n            [4746, 1081],\r\n            [4852, 1000],\r\n            [4890, 996],\r\n            [5021, 1165],\r\n            [5197, 1183],\r\n            [5335, 1127],\r\n            [5375, 1042],\r\n            [5506, 1167],\r\n            [5584, 1076],\r\n            [5622, 1072],\r\n            [5664, 996],\r\n            [5713, 1200],\r\n            [5842, 1192],\r\n            [5890, 1105],\r\n            [5914, 875],\r\n            [6213, 875],\r\n            [6276, 913],\r\n            [6156, 969],\r\n            [6108, 1154],\r\n            [6354, 1233],\r\n            [6400, 1059],\r\n            [6531, 1045],\r\n            [6556, 845],\r\n            [6625, 820],\r\n            [6686, 1100],\r\n            [6797, 1129],\r\n            [6851, 1183],\r\n            [7028, 1170],\r\n            [7076, 1019],\r\n            [7114, 1015],\r\n            [7161, 932],\r\n            [7305, 1067],\r\n            [7446, 1236],\r\n            [7582, 1198],\r\n            [7628, 1081],\r\n            [7692, 1057],\r\n            [7721, 993],\r\n            [7849, 993],\r\n            [7886, 847],\r\n            [7941, 821],\r\n            [8093, 847],\r\n            [8137, 763],\r\n            [8182, 807],\r\n            [8191, 986],\r\n            [8259, 1013],\r\n            [8348, 1151],\r\n            [8506, 1221],\r\n            [8525, 1263],\r\n            [8644, 1260],\r\n            [8674, 1187],\r\n            [8764, 1167],\r\n            [8778, 1043],\r\n            [8848, 1010],\r\n            [8886, 935],\r\n            [8957, 1116],\r\n            [9057, 1137],\r\n            [9106, 1216],\r\n            [9291, 1260],\r\n            [9342, 1095],\r\n            [9423, 1050],\r\n            [9443, 997],\r\n            [9505, 996],\r\n            [9642, 1170],\r\n            [9892, 1168],\r\n            [9990, 1050],\r\n            [10138, 1176],\r\n            [10185, 1075],\r\n            [10230, 1073],\r\n            [10269, 994],\r\n            [10318, 1097],\r\n            [10326, 1227],\r\n            [10453, 1206],\r\n            [10499, 1114],\r\n            [10507, 901],\r\n            [10587, 867],\r\n            [10787, 866],\r\n            [10888, 912],\r\n            [10766, 974],\r\n            [10720, 1156],\r\n            [10799, 1183],\r\n            [10844, 1257],\r\n            [10950, 1255],\r\n            [11001, 1179],\r\n            [11061, 1167],\r\n            [11108, 1021],\r\n            [11151, 1013],\r\n            [11187, 932],\r\n            [11271, 1010],\r\n            [11339, 1056],\r\n            [11532, 1280],\r\n            [11815, 1280],\r\n            [11858, 1209],\r\n            [11920, 1238],\r\n            [11935, 1280],\r\n            [12339, 1280],\r\n            [12398, 1176],\r\n            [12520, 1168],\r\n            [12561, 1013],\r\n            [12611, 999],\r\n            [12672, 1118],\r\n            [12794, 1100],\r\n            [12879, 1050],\r\n            [12898, 999],\r\n            [13039, 1000],\r\n            [13069, 848],\r\n            [13287, 818],\r\n            [13331, 763],\r\n            [13372, 809],\r\n            [13377, 988],\r\n            [13447, 1008],\r\n            [13538, 1149],\r\n            [13709, 1235],\r\n            [13836, 1249],\r\n            [13898, 1092],\r\n            [13971, 1053],\r\n            [13991, 1000],\r\n            [14062, 1002],\r\n            [14169, 1156],\r\n            [14520, 1171],\r\n            [14598, 1043],\r\n            [14669, 1116],\r\n            [14800, 1091],\r\n            [14884, 994],\r\n            [14921, 1057],\r\n            [15066, 1078],\r\n            [15107, 996],\r\n            [15184, 1118],\r\n            [15377, 1171],\r\n            [15602, 1170],\r\n            [15624, 1097],\r\n            [15680, 1094],\r\n            [15719, 996],\r\n            [15865, 999],\r\n            [15881, 757],\r\n            [15919, 712],\r\n            [16028, 709],\r\n            [16053, 633],\r\n            [16133, 578],\r\n            [16150, 533],\r\n            [16196, 636],\r\n            [16196, 928],\r\n            [16342, 989],\r\n            [16525, 1203],\r\n            [16672, 1241],\r\n            [16742, 1235],\r\n            [16783, 1089],\r\n            [16858, 1051],\r\n            [16880, 997],\r\n            [17015, 988],\r\n            [17042, 745],\r\n            [17074, 709],\r\n            [17226, 703],\r\n            [17297, 590],\r\n            [17335, 630],\r\n            [17352, 994],\r\n            [17435, 1026],\r\n            [17511, 1148],\r\n            [17720, 1189],\r\n            [17750, 1121],\r\n            [17796, 1108],\r\n            [17848, 1203],\r\n            [17995, 1146],\r\n            [18000, 634],\r\n        ],\r\n        objects: [\r\n            [\r\n                [4730, 617],\r\n                [4792, 516],\r\n                [4871, 478],\r\n                [4885, 426],\r\n                [4960, 422],\r\n                [5009, 462],\r\n                [4960, 562],\r\n                [4893, 601],\r\n                [4876, 681],\r\n                [4743, 666],\r\n                [4727, 649],\r\n                [4730, 617]\r\n            ],\r\n            [\r\n                [9339, 617],\r\n                [9401, 516],\r\n                [9480, 478],\r\n                [9494, 426],\r\n                [9569, 422],\r\n                [9618, 462],\r\n                [9569, 562],\r\n                [9502, 601],\r\n                [9485, 681],\r\n                [9352, 666],\r\n                [9336, 649],\r\n                [9339, 617]\r\n            ],\r\n            [\r\n                [11546, 502],\r\n                [11600, 464],\r\n                [12029, 473],\r\n                [12059, 338],\r\n                [12137, 304],\r\n                [12148, 254],\r\n                [12307, 240],\r\n                [12342, 190],\r\n                [12380, 188],\r\n                [12437, 313],\r\n                [12439, 532],\r\n                [12322, 587],\r\n                [12236, 682],\r\n                [12230, 821],\r\n                [12119, 993],\r\n                [12100, 907],\r\n                [12049, 864],\r\n                [11991, 950],\r\n                [11874, 742],\r\n                [11758, 962],\r\n                [11701, 682],\r\n                [11644, 967],\r\n                [11589, 581],\r\n                [11541, 530],\r\n                [11546, 502]\r\n            ],\r\n            [\r\n                [13846, 579],\r\n                [13847, 498],\r\n                [13906, 460],\r\n                [14142, 464],\r\n                [14226, 500],\r\n                [14332, 460],\r\n                [14357, 416],\r\n                [14398, 460],\r\n                [14398, 527],\r\n                [14360, 551],\r\n                [14351, 635],\r\n                [14267, 631],\r\n                [14284, 712],\r\n                [14254, 738],\r\n                [14134, 722],\r\n                [14050, 717],\r\n                [14026, 744],\r\n                [13920, 741],\r\n                [13855, 576],\r\n                [13846, 579]\r\n            ]\r\n        ],\r\n        enemyGroups: [\r\n            {\r\n                spawnTime: 1e3,\r\n                ai: 0,\r\n                startY: 0,\r\n                sprite: 0\r\n            },\r\n            {\r\n                spawnTime: 9e3,\r\n                ai: 1,\r\n                startY: 0,\r\n                sprite: 1\r\n            },\r\n            {\r\n                spawnTime: 19e3,\r\n                ai: 2,\r\n                startY: 1080,\r\n                sprite: 0\r\n            },\r\n            {\r\n                spawnTime: 26e3,\r\n                ai: 3,\r\n                startY: 720 /*+67.5*/,\r\n                sprite: 2\r\n            },\r\n            {\r\n                spawnTime: 33e3,\r\n                ai: 3,\r\n                startY: 720 /*+67.5*/,\r\n                sprite: 3\r\n            },\r\n            {\r\n                spawnTime: 40e3,\r\n                ai: 0,\r\n                startY: 0,\r\n                sprite: 0\r\n            },\r\n            {\r\n                spawnTime: 48e3,\r\n                ai: 4,\r\n                startY: 1080,\r\n                sprite: 4\r\n            }\r\n        ],\r\n        blocks: [\r\n            [3802, 288, 7],\r\n            [3917, 115, 10],\r\n            [4032, 288, 5],\r\n            [16133, 288, 4],\r\n            [16190, 288, 4],\r\n            [17054, 287, 7],\r\n            [17169, 114, 10],\r\n            [17284, 287, 5]\r\n        ],\r\n        lasers: [\r\n            [6049, 518, 6],\r\n            [10660, 518, 6],\r\n            [15729, 173, 14]\r\n        ],\r\n        switches: [\r\n            [5991, 518],\r\n            [10602, 518],\r\n            [15614, 1037]\r\n        ]\r\n    }\r\n];\r\nfunction getLevel(lvlNumber) {\r\n    let level = {\r\n        blackScreenLength: levels[lvlNumber].blackScreenLength,\r\n        lines: [],\r\n        enemySpawns: [],\r\n        blocks: [],\r\n        lasers: [],\r\n        switches: []\r\n    };\r\n    //Ceil lines\r\n    addLines(level, levels[lvlNumber].ceilPoints);\r\n    //Floor lines\r\n    addLines(level, levels[lvlNumber].floorPoints);\r\n    //Objects in the middle\r\n    for (const object of levels[lvlNumber].objects)\r\n        addLines(level, object);\r\n    //Enemies\r\n    for (const enemyGroup of levels[lvlNumber].enemyGroups)\r\n        addEnemies(level, { ...enemyGroup, color: 0 });\r\n    //Blocks\r\n    addBlocks(level, levels[lvlNumber].blocks);\r\n    //Lasers\r\n    addLasers(level, levels[lvlNumber].lasers);\r\n    //Switches\r\n    addSwitches(level, levels[lvlNumber].switches);\r\n    return level;\r\n}\r\nfunction addLines(level, points) {\r\n    for (let i = 0; i < points.length - 1; i++) {\r\n        let prev = points[i];\r\n        let now = points[i + 1];\r\n        level.lines.push({\r\n            start: { x: prev[0] + level.blackScreenLength, y: prev[1] },\r\n            end: { x: now[0] + level.blackScreenLength, y: now[1] }\r\n        });\r\n    }\r\n}\r\nfunction addEnemies(level, enemyGroup) {\r\n    for (let i = 0; i < 5; i++)\r\n        level.enemySpawns.push({\r\n            spawnTime: enemyGroup.spawnTime + i * 22 * 20,\r\n            ai: enemyGroup.ai,\r\n            startY: enemyGroup.startY,\r\n            sprite: enemyGroup.sprite,\r\n            color: i\r\n        });\r\n}\r\nfunction addBlocks(level, blocks) {\r\n    for (const block of blocks)\r\n        for (let i = 0; i < block[2]; i++)\r\n            level.blocks.push({ position: { x: block[0] + level.blackScreenLength, y: block[1] + i * _consts__WEBPACK_IMPORTED_MODULE_0__.backObjSize.height }, ded: false });\r\n}\r\nfunction addLasers(level, lasers) {\r\n    for (const laser of lasers)\r\n        level.lasers.push({ position: { x: laser[0] + level.blackScreenLength, y: laser[1] }, height: laser[2] });\r\n}\r\nfunction addSwitches(level, switches) {\r\n    for (const sw of switches)\r\n        level.switches.push({ x: sw[0] + level.blackScreenLength, y: sw[1] });\r\n}\r\n\r\n\n\n//# sourceURL=webpack://subterra/./src/levels.ts?");

/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Game */ \"./src/Game.ts\");\n\r\n\r\n_consts__WEBPACK_IMPORTED_MODULE_0__.ctx.fillStyle = \"#000\";\r\n_consts__WEBPACK_IMPORTED_MODULE_0__.ctx.fillRect(0, 0, 2188, 1440);\r\nlet loaded = false;\r\nlet controls = {\r\n    up: 'ArrowUp',\r\n    right: 'ArrowRight',\r\n    down: 'ArrowDown',\r\n    left: 'ArrowLeft',\r\n    shoot: 'z',\r\n    hitboxes: 'h'\r\n};\r\nlet game;\r\ndocument.body.addEventListener(\"keyup\", (e) => {\r\n    if (e.key === \"Enter\") {\r\n        if (loaded) {\r\n            if (game !== undefined)\r\n                game.player.hp = -2;\r\n            game = new _Game__WEBPACK_IMPORTED_MODULE_1__.Game(controls, 0);\r\n            _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.stop();\r\n        }\r\n        else {\r\n            _consts__WEBPACK_IMPORTED_MODULE_0__.ctx.drawImage(_consts__WEBPACK_IMPORTED_MODULE_0__.gfx.main, 0, 0);\r\n            _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.play(\"main\", true);\r\n            loaded = true;\r\n        }\r\n    }\r\n    else if (e.key === \"m\") {\r\n        _consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.changeVolume(Math.abs(_consts__WEBPACK_IMPORTED_MODULE_0__.audioPlayer.volume - 1));\r\n    }\r\n});\r\n// let canvas = document.getElementById(\"game\");\r\n// let screen = 0;\r\n// let points = \"\";\r\n// canvas.addEventListener(\"click\", (e) => {\r\n//     points += `[${Math.floor((e.clientX - 10) * 2188 / 1382 + 1850 * screen)}, ` +\r\n//         `${Math.floor((e.clientY - 10) * 1267 / 800)}],\\n`;\r\n// })\r\n// document.body.addEventListener(\"keyup\", (e) => {\r\n//     let xd = e.key;\r\n//     if (xd === \"Enter\")\r\n//         console.log(points);\r\n//     else if (xd === \"Delete\")\r\n//         points = \"\";\r\n//     let x = parseInt(xd);\r\n//     if (Number.isInteger(x)) {\r\n//         screen = x;\r\n//         game.timePassed = x * 5285;\r\n//     }\r\n// });\r\n\n\n//# sourceURL=webpack://subterra/./src/main.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.ts");
/******/ 	
/******/ })()
;